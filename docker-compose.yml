version: '3.8'

services:
  postgres:
    image: postgres:14
    container_name: scrim_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - scrimnet

  backend:
    build: ./server
    container_name: scrim_backend
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
    depends_on:
      - postgres
    networks:
      - scrimnet

  frontend:
    build: ./client
    container_name: scrim_frontend
    stdin_open: true
    tty: true
    depends_on:
      - backend
    networks:
      - scrimnet

  nginx:
    image: nginx:alpine
    container_name: scrim_nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
    networks:
      - scrimnet

  certbot:
    image: certbot/certbot
    container_name: scrim_certbot
    volumes:
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
    entrypoint: sh -c "trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;"

volumes:
  postgres_data:

networks:
  scrimnet:
    driver: bridge

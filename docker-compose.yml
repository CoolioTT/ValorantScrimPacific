version: "3.9"

services:
  db:
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./server/sql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks: [scrim_net]

  server:
    build: ./server
    restart: unless-stopped
    env_file: .env
    depends_on: [db]
    networks: [scrim_net]

  client:
    build: ./client
    restart: unless-stopped
    env_file: .env
    networks: [scrim_net]

  proxy:
    image: nginx:1.27
    restart: unless-stopped
    depends_on: [client, server]
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/proxy.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/dhparam.pem:/etc/ssl/certs/dhparam.pem:ro
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    networks: [scrim_net]

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: >
      sh -c "trap exit TERM; while :; do certbot renew --webroot -w /var/www/certbot; sleep 12h & wait $${!}; done"

networks:
  scrim_net:

volumes:
  db_data:
